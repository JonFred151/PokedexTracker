@model IEnumerable<GenTwo>

<h2>Pokedex Track Gen 2</h2>
<table class="table">
    <tr>
        <th>Caught?</th>
        <th>Dex Number</th>
        <th>Pokemon</th>
        <th>Type</th>
        <th>Obtainable</th>
        <th>Method</th>
    </tr>

    @foreach (var GenTwo in @Model)
    {
        <tr>
            <td>
                <input type="checkbox" id="Capture_@(GenTwo.Dexid)" class="capture-checkbox" data-dexid="@(GenTwo.Dexid)" @(GenTwo.isCaught == 1 ? "checked" : "") />
            </td>
           
            <td>@GenTwo.Dexid</td>
            <td>@GenTwo.Pokemon</td>
            <td>@GenTwo.Type</td>
            <td>@GenTwo.Obtainable</td>
            <td>@GenTwo.Method</td>
        </tr>
    }
</table>
<script>
    // Function to set checkbox state based on local storage
    function setCheckboxState() {
        document.querySelectorAll('.capture-checkbox').forEach(function (checkbox) {
            var dexid = checkbox.getAttribute('data-dexid');
            var isChecked = localStorage.getItem("capture_" + dexid) === "true";
            checkbox.checked = isChecked;
        });
    }

    // Retrieve and set checkbox state from local storage when the page loads
    document.addEventListener('DOMContentLoaded', function () {
        setCheckboxState();
    });

    // Event listener for checkbox changes
    document.querySelectorAll('.capture-checkbox').forEach(function (checkbox) {
        checkbox.addEventListener('change', function () {
            var dexid = this.getAttribute('data-dexid');
            var isChecked = this.checked;

            // Store checkbox state in local storage
            localStorage.setItem("capture_" + dexid, isChecked);

            // Send AJAX request to update database
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/GenTwo/UpdateGenOne', true);
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.onreadystatechange = function () {
                if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {
                    // Handle response from the server if needed
                }
            };
            xhr.send(JSON.stringify({ dexid: dexid, isChecked: isChecked }));
        });
    });
</script>


